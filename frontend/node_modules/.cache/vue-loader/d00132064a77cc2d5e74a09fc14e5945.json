{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/Main.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/app/src/components/Main.vue","mtime":1685257708681},{"path":"/app/node_modules/ts-loader/index.js","mtime":1683328007703},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1683075407012},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1683075407633}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IFZ1ZSwgQ29tcG9uZW50LCBXYXRjaCB9IGZyb20gInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiOwppbXBvcnQgZHJhZ2dhYmxlIGZyb20gInZ1ZWRyYWdnYWJsZSI7CmltcG9ydCB7IEV2ZW50QnVzIH0gZnJvbSAiQC9ldmVudC1idXMiOwoKQENvbXBvbmVudCh7CiAgY29tcG9uZW50czogewogICAgZHJhZ2dhYmxlLAogIH0sCn0pCgpleHBvcnQgZGVmYXVsdCBjbGFzcyBNYWluQ29tcG9uZW50IGV4dGVuZHMgVnVlIHsKICB0YXNrczogeyBpZDogbnVtYmVyOyB0ZXh0OiBzdHJpbmc7IGNvbXBsZXRlZDogYm9vbGVhbiB9W10gPSBbXTsKICBib29rbWFya3M6IHsgaWQ6IG51bWJlcjsgbmFtZTogc3RyaW5nOyB0YXNrczogYW55W10gfVtdID0gW107CiAgbmV4dEJvb2ttYXJrSUQgPSBOdW1iZXIobG9jYWxTdG9yYWdlLmdldEl0ZW0oIm5leHRCb29rbWFya0lEIikpIHx8IDE7CiAgYm9va21hcmtOYW1lID0gIiI7CiAgY2hlY2tib3ggPSB0cnVlOwogIG5ld1Rhc2tUZXh0ID0gIiI7CiAgbmV4dFRhc2tJRCA9IE51bWJlcihsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgibmV4dFRhc2tJRCIpKSB8fCAxOwogIG1vZGFsT3BlbiA9IGZhbHNlOwogIAogIG1vdW50ZWQoKSB7CiAgICBjb25zdCBzdG9yZWRUYXNrcyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ0YXNrcyIpOwogICAgY29uc3Qgc3RvcmVkQm9va21hcmtzID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oImJvb2ttYXJrcyIpOwogICAgaWYgKHN0b3JlZFRhc2tzKSB7CiAgICAgIHRoaXMudGFza3MgPSBKU09OLnBhcnNlKHN0b3JlZFRhc2tzKTt4CiAgICB9IGVsc2UgaWYgKHN0b3JlZEJvb2ttYXJrcykgewogICAgICB0aGlzLmJvb2ttYXJrcyA9IEpTT04ucGFyc2Uoc3RvcmVkQm9va21hcmtzKTsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybjsKICAgIH0KICB9CgogIC8vIGB0YXNrYOODl+ODreODkeODhuOCo+OBruWkieabtOOCkuebo+imlgogIEBXYXRjaCgidGFza3MiLCB7IGRlZXA6IHRydWUgfSkKICB1cGRhdGVMb2NhbFN0b3JhZ2UoKSB7CiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgidGFza3MiLCBKU09OLnN0cmluZ2lmeSh0aGlzLnRhc2tzKSk7CiAgfQrjgIAKICAvLyDjgr/jgrnjgq/jga7ov73liqAKICBhZGRUYXNrKCkgewogICAgaWYgKHRoaXMubmV3VGFza1RleHQpIHsKICAgICAgdGhpcy50YXNrcy5wdXNoKHsKICAgICAgICBpZDogdGhpcy5uZXh0VGFza0lELAogICAgICAgIHRleHQ6IHRoaXMubmV3VGFza1RleHQsCiAgICAgICAgY29tcGxldGVkOiBmYWxzZSwKICAgICAgfSk7CiAgICB9CiAgICBpZih0aGlzLnRhc2tzLmxlbmd0aCA9PT0gMSkgewogICAgICB0aGlzLiRmb3JjZVVwZGF0ZSgpOwogICAgfQogICAgdGhpcy5uZXh0VGFza0lEKys7CiAgICB0aGlzLm5ld1Rhc2tUZXh0ID0gIiI7CiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgibmV4dFRhc2tJRCIsIFN0cmluZyh0aGlzLm5leHRUYXNrSUQpKTsKICAgIGNvbnNvbGUubG9nKHRoaXMudGFza3MpOwogIH0KCiAgLy8g44OW44OD44Kv44Oe44O844Kv44KS6L+95YqgCiAgYWRkVG9Cb29rbWFya3MoKSB7CiAgY29uc3QgdGFza3NEYXRhID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oInRhc2tzIik7CiAgaWYgKHRhc2tzRGF0YSkgewogICAgY29uc3QgdGFza3MgPSBKU09OLnBhcnNlKHRhc2tzRGF0YSk7CiAgICBjb25zdCBib29rbWFyayA9IHsKICAgICAgaWQ6IHRoaXMubmV4dEJvb2ttYXJrSUQsCiAgICAgIG5hbWU6IHRoaXMuYm9va21hcmtOYW1lLAogICAgICB0YXNrczogdGFza3MsCiAgICB9OwogICAgY29uc3Qgc3RvcmVkQm9va21hcmtzID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oImJvb2ttYXJrcyIpOwogICAgbGV0IGJvb2ttYXJrcyA9IFtdOwogICAgaWYgKHN0b3JlZEJvb2ttYXJrcykgewogICAgICBib29rbWFya3MgPSBKU09OLnBhcnNlKHN0b3JlZEJvb2ttYXJrcyk7CiAgICB9CiAgICBib29rbWFya3MgPSBbLi4uYm9va21hcmtzLCBib29rbWFya107CiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgiYm9va21hcmtzIiwgSlNPTi5zdHJpbmdpZnkoYm9va21hcmtzKSk7CgogICAgRXZlbnRCdXMuJGVtaXQoImJvb2ttYXJrcy11cGRhdGVkIiwgdGhpcy5ib29rbWFya3MpOwoKICAgIHRoaXMuY2xvc2VNb2RhbCgpOwogICAgdGhpcy5uZXh0Qm9va21hcmtJRCsrOwogICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oIm5leHRCb29rbWFya0lEIiwgU3RyaW5nKHRoaXMubmV4dEJvb2ttYXJrSUQpKTsKICB9Cn0KCiAgCiAgLy8g44K/44K544Kv44Gu5YmK6ZmkCiAgZGVsZXRlVGFzayhpbmRleDogbnVtYmVyKSB7CiAgICB0aGlzLnRhc2tzLnNwbGljZShpbmRleCwgMSk7CiAgfQoKICAvLyDjgr/jgrnjgq/jga7lrozkuoYv5pyq5a6M5LqG44Gu5Yik5a6aCiAgdG9nZ2xlVGFza0NvbXBsZXRpb24odGFzazogeyBjb21wbGV0ZWQ6IGJvb2xlYW4gfSkgewogICAgdGFzay5jb21wbGV0ZWQgPSAhdGFzay5jb21wbGV0ZWQ7CiAgIH0KCiAgLy8g5YWo44K/44K544Kv44KS5YmK6ZmkCiAgcmVtb3ZlQWxsVGFzaygpIHsKICAgIGlmKHdpbmRvdy5jb25maXJtKCLjgZnjgbnjgabjga7osrfjgYTnianjg6rjgrnjg4jjgpLliYrpmaTjgZfjgb7jgZnjgYvvvJ8iKSkgewogICAgICB0aGlzLnRhc2tzID0gW107CiAgICB9CiAgfQoKICAvLyDjg6Ljg7zjg4Djg6vjgqbjgqPjg7Pjg4njgqbjga7plovplokKICBvcGVuTW9kYWwoKSB7CiAgICB0aGlzLm1vZGFsT3BlbiA9IHRydWU7CiAgfQogIGNsb3NlTW9kYWwoKSB7CiAgICB0aGlzLm1vZGFsT3BlbiA9IGZhbHNlOwogICAgdGhpcy5ib29rbWFya05hbWUgPSAiIjsKICB9Cgp9Cg=="},{"version":3,"sources":["Main.vue"],"names":[],"mappings":";AA2FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"Main.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"orange lighten-5\" style=\"position: relative; min-height: 100%; margin-top: 50px;\">\n    <v-main ref=\"mainComponent\">\n\n      <div v-if=\"tasks.length > 0\">\n          <v-btn @click=\"openModal\">ブックマークに追加</v-btn>\n          <v-btn @click=\"removeAllTask\">全て削除</v-btn>\n      </div>\n\n      <v-container class=\"pb-5\" v-if=\"tasks.length > 0\">\n        <draggable \n        v-model=\"tasks\"\n        :animation=\"300\"\n        handle=\".drag-handle\">\n          <v-row v-for=\"(task, index) in tasks\" :key=\"task.id\" class=\"align-center my-0 py-0\" style=\"min-height: 40px; max-height: 40px;\">\n            <v-col cols=\"2\" class=\"d-flex justify-center align-center pa-0 ma-0\">\n              <v-btn small @click=\"deleteTask(index)\" class=\"todo-reorder text-capitalize\" icon>\n                <v-icon>\n                  mdi-backspace\n                </v-icon>\n              </v-btn>\n            </v-col>\n            <v-col cols=\"1\" class=\"d-flex justify-center align-center pa-0 ma-0\">\n              <v-checkbox\n              class=\"todo-checkbox\"\n              v-model=\"task.completed\"\n              ></v-checkbox>\n            </v-col>\n            <v-col cols=\"7\" class=\"d-flex align-center pa-0 ma-0\">\n              <div class=\"scrollable-text\">\n                <p class=\"text-center mb-0\" :class=\"{ 'completed-task': task.completed }\">{{ task.text }}</p>\n              </div>\n            </v-col>\n            <v-col cols=\"2\" class=\"d-flex justify-center align-center pa-0 ma-0\">\n              <v-app-bar-nav-icon class=\"drag-handle\"></v-app-bar-nav-icon>\n            </v-col>\n          </v-row>\n        </draggable>\n      </v-container>\n\n      <v-container class=\"fixed\">\n        <v-row\n          position=\"fixed\"\n          bottom\n          justify=\"center\"\n          class=\"align-center my-0 py-0\"\n          style=\"width: 100%; z-index: 1000; margin-bottom: ;\"\n        >\n          <v-col class=\"d-flex justify-center align-center\" cols=\"1\">\n            <v-btn small @click=\"removeAllTask\" class=\"text-capitalize ma-1\" icon>\n              <v-icon>\n                mdi-delete\n              </v-icon>\n            </v-btn>\n          </v-col>\n          <v-col cols=\"8\">\n            <v-text-field\n              label=\"入力して購入リストに追加\"\n              class=\"todo-input\"\n              color=\"#F57C00\"\n              v-model=\"newTaskText\"\n            ></v-text-field>\n          </v-col>\n          <v-col class=\"d-flex justify-center align-center\" cols=\"1\">\n            <v-btn small @click=\"addTask\" class=\"todo-reorder text-capitalize ma-1\" icon>\n              <v-icon>\n                mdi-plus-circle-outline\n              </v-icon>\n            </v-btn>\n          </v-col>\n        </v-row>\n      </v-container>\n\n      <v-dialog v-model=\"modalOpen\" max-width=\"500\">\n        <v-card>\n          <v-card-title>ブックマークに追加</v-card-title>\n          <v-card-text>\n            <v-text-field v-model=\"bookmarkName\" label=\"ブックマーク名\"></v-text-field>\n          </v-card-text>\n          <v-card-actions>\n            <v-btn color=\"primary\" @click=\"addToBookmarks\">追加</v-btn>\n            <v-btn @click=\"closeModal\">キャンセル</v-btn>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n    </v-main>\n  </div>\n</template>\n\n\n<script lang=\"ts\">\nimport { Vue, Component, Watch } from \"vue-property-decorator\";\nimport draggable from \"vuedraggable\";\nimport { EventBus } from \"@/event-bus\";\n\n@Component({\n  components: {\n    draggable,\n  },\n})\n\nexport default class MainComponent extends Vue {\n  tasks: { id: number; text: string; completed: boolean }[] = [];\n  bookmarks: { id: number; name: string; tasks: any[] }[] = [];\n  nextBookmarkID = Number(localStorage.getItem(\"nextBookmarkID\")) || 1;\n  bookmarkName = \"\";\n  checkbox = true;\n  newTaskText = \"\";\n  nextTaskID = Number(localStorage.getItem(\"nextTaskID\")) || 1;\n  modalOpen = false;\n  \n  mounted() {\n    const storedTasks = localStorage.getItem(\"tasks\");\n    const storedBookmarks = localStorage.getItem(\"bookmarks\");\n    if (storedTasks) {\n      this.tasks = JSON.parse(storedTasks);x\n    } else if (storedBookmarks) {\n      this.bookmarks = JSON.parse(storedBookmarks);\n    } else {\n      return;\n    }\n  }\n\n  // `task`プロパティの変更を監視\n  @Watch(\"tasks\", { deep: true })\n  updateLocalStorage() {\n    localStorage.setItem(\"tasks\", JSON.stringify(this.tasks));\n  }\n　\n  // タスクの追加\n  addTask() {\n    if (this.newTaskText) {\n      this.tasks.push({\n        id: this.nextTaskID,\n        text: this.newTaskText,\n        completed: false,\n      });\n    }\n    if(this.tasks.length === 1) {\n      this.$forceUpdate();\n    }\n    this.nextTaskID++;\n    this.newTaskText = \"\";\n    localStorage.setItem(\"nextTaskID\", String(this.nextTaskID));\n    console.log(this.tasks);\n  }\n\n  // ブックマークを追加\n  addToBookmarks() {\n  const tasksData = localStorage.getItem(\"tasks\");\n  if (tasksData) {\n    const tasks = JSON.parse(tasksData);\n    const bookmark = {\n      id: this.nextBookmarkID,\n      name: this.bookmarkName,\n      tasks: tasks,\n    };\n    const storedBookmarks = localStorage.getItem(\"bookmarks\");\n    let bookmarks = [];\n    if (storedBookmarks) {\n      bookmarks = JSON.parse(storedBookmarks);\n    }\n    bookmarks = [...bookmarks, bookmark];\n    localStorage.setItem(\"bookmarks\", JSON.stringify(bookmarks));\n\n    EventBus.$emit(\"bookmarks-updated\", this.bookmarks);\n\n    this.closeModal();\n    this.nextBookmarkID++;\n    localStorage.setItem(\"nextBookmarkID\", String(this.nextBookmarkID));\n  }\n}\n\n  \n  // タスクの削除\n  deleteTask(index: number) {\n    this.tasks.splice(index, 1);\n  }\n\n  // タスクの完了/未完了の判定\n  toggleTaskCompletion(task: { completed: boolean }) {\n    task.completed = !task.completed;\n   }\n\n  // 全タスクを削除\n  removeAllTask() {\n    if(window.confirm(\"すべての買い物リストを削除しますか？\")) {\n      this.tasks = [];\n    }\n  }\n\n  // モーダルウィンドウの開閉\n  openModal() {\n    this.modalOpen = true;\n  }\n  closeModal() {\n    this.modalOpen = false;\n    this.bookmarkName = \"\";\n  }\n\n}\n</script>\n\n<style>\n.completed-task {\n  text-decoration: line-through;\n}\n.scrollable-text {\n  overflow-x: auto;\n  white-space: nowrap;\n}\n\n.fixed {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 100;\n  padding: 0;\n}\n\n</style>"]}]}