{"remainingRequest":"/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/app/src/components/Main.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/app/src/components/Main.vue","mtime":1683273096597},{"path":"/app/node_modules/ts-loader/index.js","mtime":1683075407514},{"path":"/app/node_modules/cache-loader/dist/cjs.js","mtime":1683075407012},{"path":"/app/node_modules/vue-loader/lib/index.js","mtime":1683075407633}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IFZ1ZSwgQ29tcG9uZW50IH0gZnJvbSAidnVlLXByb3BlcnR5LWRlY29yYXRvciI7CmltcG9ydCBkcmFnZ2FibGUgZnJvbSAidnVlZHJhZ2dhYmxlIjsKCkBDb21wb25lbnQoewogIGNvbXBvbmVudHM6IHsKICAgIGRyYWdnYWJsZSwKICB9LAp9KQpleHBvcnQgZGVmYXVsdCBjbGFzcyBNYWluQ29tcG9uZW50IGV4dGVuZHMgVnVlIHsKICB0YXNrcyA9IFsKICAgIHsKICAgICAgaWQ6IDEsCiAgICAgIHRleHQ6ICIiLAogICAgICBjb21wbGV0ZWQ6IGZhbHNlLAogICAgfSwKICBdOwoKICBuZXh0VGFza0lEID0gMjsKCiAgbW91bnRlZCgpIHsKICAgIGNvbnN0IHN0b3JlZFRhc2tzID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oInRhc2tzIik7CiAgICBpZiAoc3RvcmVkVGFza3MpIHsKICAgICAgdGhpcy50YXNrcyA9IEpTT04ucGFyc2Uoc3RvcmVkVGFza3MpOwogICAgfQogIH0KCiAgYWRkVGFzaygpIHsKICAgIHRoaXMudGFza3MucHVzaCh7CiAgICAgIGlkOiB0aGlzLm5leHRUYXNrSUQsCiAgICAgIHRleHQ6ICIiLAogICAgICBjb21wbGV0ZWQ6IGZhbHNlLAogICAgfSk7CiAgICB0aGlzLm5leHRUYXNrSUQrKzsKICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ0YXNrcyIsIEpTT04uc3RyaW5naWZ5KHRoaXMudGFza3MpKTsKICAgIGNvbnNvbGUubG9nKHRoaXMudGFza3MpOwogIH0KICAKICBkZWxldGVUYXNrKGlkOiBudW1iZXIpIHsKICAgIHRoaXMudGFza3MgPSB0aGlzLnRhc2tzLmZpbHRlcih0YXNrID0+IHRhc2suaWQgIT09IGlkKTsKICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ0YXNrcyIsIEpTT04uc3RyaW5naWZ5KHRoaXMudGFza3MpKTsKICAgIGNvbnNvbGUubG9nKHRoaXMudGFza3MpOwogIH0KCiAgdG9nZ2xlVGFza0NvbXBsZXRpb24odGFzazogeyBjb21wbGV0ZWQ6IGJvb2xlYW4gfSkgewogICAgdGFzay5jb21wbGV0ZWQgPSAhdGFzay5jb21wbGV0ZWQ7CiAgIH0KICBvblRhc2tPcmRlckNoYW5nZShldmVudDogYW55KSB7CiAgLy8g44K/44K544Kv6aCG5bqP44GM5aSJ5pu044GV44KM44Gf5b6M44Gu5Yem55CG44KS44GT44GT44Gn6KGM44GG44GT44Go44GM44Gn44GN44G+44GZ44CCCiAgLy8g5L6L44GI44Gw44CB5paw44GX44GE6aCG5bqP44KS44OH44O844K/44OZ44O844K544Gr5L+d5a2Y44GZ44KL44Gq44Gp44CCCiAgfQp9Cg=="},{"version":3,"sources":["Main.vue"],"names":[],"mappings":";AAgCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Main.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-main>\n    <v-container>\n      <draggable v-model=\"tasks\" :animation=\"300\" @end=\"onTaskOrderChange\">\n        <v-row v-for=\"task in tasks\" :key=\"task.id\" class=\"mr-auto ml-auto\">\n          <v-col class=\"d-flex align-center pt-1 pa-0 bg-surface-variant\">\n            <v-checkbox\n              style=\"transform: scale(0.6); background-color: rebeccapurple;\"\n              label=\"do\"\n              class=\"todo-checkbox\"\n              color=\"orange\"\n              hide-details\n              @change=\"toggleTaskCompletion(task)\"\n            ></v-checkbox>\n            <v-text-field\n              label=\"what to buy...?\"\n              class=\"todo-input\"\n              :class=\"{ 'completed-task': task.completed }\"\n              v-model=\"task.text\"\n            ></v-text-field>\n            <div class=\"ma-1\">\n              <v-btn x-small @click=\"addTask\" class=\"todo-reorder text-capitalize ma-1\">+</v-btn>\n              <v-btn x-small @click=\"deleteTask(task.id)\" class=\"todo-reorder text-capitalize ma-1\" :disabled=\"tasks.length === 1\">-</v-btn>\n            </div>\n          </v-col>\n        </v-row>\n      </draggable>\n    </v-container>\n  </v-main>\n</template>\n\n<script lang=\"ts\">\nimport { Vue, Component } from \"vue-property-decorator\";\nimport draggable from \"vuedraggable\";\n\n@Component({\n  components: {\n    draggable,\n  },\n})\nexport default class MainComponent extends Vue {\n  tasks = [\n    {\n      id: 1,\n      text: \"\",\n      completed: false,\n    },\n  ];\n\n  nextTaskID = 2;\n\n  mounted() {\n    const storedTasks = localStorage.getItem(\"tasks\");\n    if (storedTasks) {\n      this.tasks = JSON.parse(storedTasks);\n    }\n  }\n\n  addTask() {\n    this.tasks.push({\n      id: this.nextTaskID,\n      text: \"\",\n      completed: false,\n    });\n    this.nextTaskID++;\n    localStorage.setItem(\"tasks\", JSON.stringify(this.tasks));\n    console.log(this.tasks);\n  }\n  \n  deleteTask(id: number) {\n    this.tasks = this.tasks.filter(task => task.id !== id);\n    localStorage.setItem(\"tasks\", JSON.stringify(this.tasks));\n    console.log(this.tasks);\n  }\n\n  toggleTaskCompletion(task: { completed: boolean }) {\n    task.completed = !task.completed;\n   }\n  onTaskOrderChange(event: any) {\n  // タスク順序が変更された後の処理をここで行うことができます。\n  // 例えば、新しい順序をデータベースに保存するなど。\n  }\n}\n</script>\n\n<style>\n.completed-task {\n  text-decoration: line-through;\n}\n</style>"]}]}